[project]
authors = [{name = "Taka", email = "takahisa.amano@eodc.eu"}]
dependencies = [
  "dask<2026",
  "numpy<3",
  "xarray<2026",
  "zarr<4",
]
name = "extend-zarr"
requires-python = ">= 3.11,< 3.13"
version = "0.1.0"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
extend_zarr = { path = ".", editable = true }

[tool.pixi.tasks]
check = "ruff check --fix --unsafe-fixes"
format = "ruff format"
style = { depends-on = ["check", "format"] }
test = "pytest -vvs"

[tool.pixi.dependencies]

[tool.pixi.feature.development.dependencies]
isort = ">=6.0.1,<7"
jupyterlab = ">=4.4.2,<5"
jupyterlab-lsp = ">=5.1.0,<6"
jupyterlab_code_formatter = ">=3.0.2,<4"
jupyterlab_vim = ">=4.1.4,<5"
ruff = ">=0.11.9,<0.12"

[tool.pixi.feature.test.dependencies]
pytest = ">=8.3.5,<9"

[tool.pixi.feature.zarr2.dependencies]
zarr = ">=2.18.0,<3"

[tool.pixi.feature.zarr3.dependencies]
zarr = ">=3"

[tool.pixi.environments]
default = ["zarr2"]
development = ["zarr2", "test", "development"]
test-zarr2 = ["zarr2", "test"]
test-zarr3 = ["zarr3", "test"]


[tool.ruff]
line-length = 79

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
fixable = ["ALL"]
select = ["ALL"]
ignore = [
  "ANN003",  # Missing type annotation for **{name}
  "C901", # Function is too complex
  "COM812",  # Trailing comma missing. Compatibility issues https://github.com/astral-sh/ruff/issues/9216
  "D100",  # Missing docstring in public module
  "D105",  # Missing docstring in magic method
  "D203",  # Checks for docstrings on class definitions that are not preceded by a blank line.
  "D213",  # Checks for docstring summary lines that are not positioned on the second physical line of the docstring.
  "ISC001",  # Implicitly concatenated string literals on one line
  "PGH003",  # Check for type: ignore annotations that suppress all type warnings, as opposed to targeting specific type warnings.
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
  "D104",  # Missing docstring in public package
]
"{tests,docs}/*" = [
  "ANN201", # Missing return type annotation for public function
  "D100",  # Missing docstring in public module
  "D101",  # Missing docstring in public class
  "D102",  # Missing docstring in public method
  "D103",  # Missing docstring in public function
  "INP001",  # File {filename} is part of an implicit namespace package. Add an __init__.py.
  "PLR0913",  # Too many arguments in function definition ( > 5 )
  "PLR2004",  # Checks for the use of unnamed numerical constants ("magic") values in comparisons.
  "S101",  # Use of assert detected
  ]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"
